{"version":3,"file":"openloginJrpc.cjs.js","mappings":"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","sources":["webpack://@toruslabs/openlogin-jrpc/./src/basePostMessageStream.ts","webpack://@toruslabs/openlogin-jrpc/./src/jrpc.ts","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"@metamask/rpc-errors\"","webpack://@toruslabs/openlogin-jrpc/./src/jrpcEngine.ts","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"end-of-stream\"","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"once\"","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"pump\"","webpack://@toruslabs/openlogin-jrpc/./src/mux.ts","webpack://@toruslabs/openlogin-jrpc/./src/postMessageStream.ts","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"events\"","webpack://@toruslabs/openlogin-jrpc/./src/safeEventEmitter.ts","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"fast-safe-stringify\"","webpack://@toruslabs/openlogin-jrpc/./src/serializableError.ts","webpack://@toruslabs/openlogin-jrpc/./src/substream.ts","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"@babel/runtime/helpers/objectSpread2\"","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"readable-stream\"","webpack://@toruslabs/openlogin-jrpc/webpack/bootstrap","webpack://@toruslabs/openlogin-jrpc/webpack/runtime/compat get default export","webpack://@toruslabs/openlogin-jrpc/webpack/runtime/define property getters","webpack://@toruslabs/openlogin-jrpc/webpack/runtime/hasOwnProperty shorthand","webpack://@toruslabs/openlogin-jrpc/webpack/runtime/make namespace object","webpack://@toruslabs/openlogin-jrpc/./src/index.ts"],"sourcesContent":["import { Duplex } from \"readable-stream\";\n\nfunction noop(): void {\n  return undefined;\n}\n\nconst SYN = \"SYN\";\nconst ACK = \"ACK\";\nconst BRK = \"BRK\";\n\nexport default class BasePostMessageStream extends Duplex {\n  _init: boolean;\n\n  _haveSyn: boolean;\n\n  _name: string;\n\n  _target: string;\n\n  _targetWindow: Window;\n\n  _targetOrigin: string;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _onMessage: any;\n\n  _synIntervalId: number;\n\n  constructor({\n    name,\n    target,\n    targetWindow = window,\n    targetOrigin = \"*\",\n  }: {\n    name: string;\n    target: string;\n    targetWindow?: Window;\n    targetOrigin?: string;\n  }) {\n    super({\n      objectMode: true,\n    });\n    if (!name || !target) {\n      throw new Error(\"Invalid input.\");\n    }\n    this._init = false;\n    this._haveSyn = false;\n    this._name = name;\n    this._target = target; // target origin\n    this._targetWindow = targetWindow;\n    this._targetOrigin = targetOrigin;\n    this._onMessage = this.onMessage.bind(this);\n    this._synIntervalId = null;\n\n    window.addEventListener(\"message\", this._onMessage, false);\n    this._handShake();\n  }\n\n  _break(): void {\n    this.cork();\n    this._write(BRK, null, noop);\n    this._haveSyn = false;\n    this._init = false;\n  }\n\n  _handShake(): void {\n    this._write(SYN, null, noop);\n    this.cork();\n  }\n\n  _onData(data: unknown): void {\n    if (!this._init) {\n      // listen for handshake\n      if (data === SYN) {\n        this._haveSyn = true;\n        this._write(ACK, null, noop);\n      } else if (data === ACK) {\n        this._init = true;\n        if (!this._haveSyn) {\n          this._write(ACK, null, noop);\n        }\n        this.uncork();\n      }\n    } else if (data === BRK) {\n      this._break();\n    } else {\n      // forward message\n      try {\n        this.push(data);\n      } catch (err) {\n        this.emit(\"error\", err);\n      }\n    }\n  }\n\n  _postMessage(data: unknown): void {\n    const originConstraint = this._targetOrigin;\n    this._targetWindow.postMessage(\n      {\n        target: this._target,\n        data,\n      },\n      originConstraint\n    );\n  }\n\n  onMessage(event: MessageEvent): void {\n    const message = event.data;\n\n    // validate message\n    if (\n      (this._targetOrigin !== \"*\" && event.origin !== this._targetOrigin) ||\n      event.source !== this._targetWindow ||\n      typeof message !== \"object\" ||\n      message.target !== this._name ||\n      !message.data\n    ) {\n      return;\n    }\n\n    this._onData(message.data);\n  }\n\n  _read(): void {\n    return undefined;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _write(data: unknown, _: any, cb: () => void): void {\n    this._postMessage(data);\n    cb();\n  }\n\n  _destroy(): void {\n    window.removeEventListener(\"message\", this._onMessage, false);\n  }\n}\n","import { Duplex } from \"readable-stream\";\n\nimport { AsyncJRPCMiddleware, ConsoleLike, IdMap, JRPCMiddleware, JRPCRequest, JRPCResponse, Json, ReturnHandlerCallback } from \"./interfaces\";\nimport SafeEventEmitter from \"./safeEventEmitter\";\nimport SerializableError from \"./serializableError\";\n\nexport const getRpcPromiseCallback =\n  (resolve: (value?: unknown) => void, reject: (error?: Error) => void, unwrapResult = true) =>\n  (error: Error, response: JRPCResponse<unknown>): void => {\n    if (error || response.error) {\n      reject(error || response.error);\n    } else if (!unwrapResult || Array.isArray(response)) {\n      resolve(response);\n    } else {\n      resolve(response.result);\n    }\n  };\n\nexport function createErrorMiddleware(log: ConsoleLike): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, end) => {\n    try {\n      // json-rpc-engine will terminate the request when it notices this error\n      if (typeof req.method !== \"string\" || !req.method) {\n        res.error = new SerializableError({ code: -32603, message: \"invalid method\" });\n        end();\n        return;\n      }\n      next((done) => {\n        const { error } = res;\n        if (!error) {\n          return done();\n        }\n        log.error(`OpenLogin - RPC Error: ${error.message}`, error);\n        return done();\n      });\n    } catch (error: unknown) {\n      log.error(`OpenLogin - RPC Error thrown: ${(error as Error).message}`, error);\n      res.error = new SerializableError({ code: -32603, message: (error as Error).message });\n      end();\n    }\n  };\n}\n\nexport function createStreamMiddleware(): { events: SafeEventEmitter; middleware: JRPCMiddleware<unknown, unknown>; stream: Duplex } {\n  const idMap: IdMap = {};\n\n  function readNoop() {\n    return false;\n  }\n\n  const events = new SafeEventEmitter();\n\n  function processResponse(res: JRPCResponse<unknown>) {\n    const context = idMap[res.id as unknown as string];\n    if (!context) {\n      throw new Error(`StreamMiddleware - Unknown response id \"${res.id}\"`);\n    }\n\n    delete idMap[res.id as unknown as string];\n    // copy whole res onto original res\n    Object.assign(context.res, res);\n    // run callback on empty stack,\n    // prevent internal stream-handler from catching errors\n    setTimeout(context.end);\n  }\n\n  function processNotification(res: JRPCRequest<unknown>) {\n    events.emit(\"notification\", res);\n  }\n\n  function processMessage(res: JRPCResponse<unknown>, _encoding: unknown, cb: (error?: Error | null) => void) {\n    let err: Error;\n    try {\n      const isNotification = !res.id;\n      if (isNotification) {\n        processNotification(res as unknown as JRPCRequest<unknown>);\n      } else {\n        processResponse(res);\n      }\n    } catch (_err: unknown) {\n      err = _err as Error;\n    }\n    // continue processing stream\n    cb(err);\n  }\n\n  const stream = new Duplex({\n    objectMode: true,\n    read: readNoop,\n    write: processMessage,\n  });\n\n  const middleware: JRPCMiddleware<unknown, unknown> = (req, res, next, end) => {\n    // write req to stream\n    stream.push(req);\n    // register request on id map\n    idMap[req.id as unknown as string] = { req, res, next, end };\n  };\n\n  return { events, middleware, stream };\n}\n\nexport type ScaffoldMiddlewareHandler<T, U> = JRPCMiddleware<T, U> | Json;\n\nexport function createScaffoldMiddleware(handlers: {\n  [methodName: string]: ScaffoldMiddlewareHandler<unknown, unknown>;\n}): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, end) => {\n    const handler = handlers[req.method];\n    // if no handler, return\n    if (handler === undefined) {\n      return next();\n    }\n    // if handler is fn, call as middleware\n    if (typeof handler === \"function\") {\n      return handler(req, res, next, end);\n    }\n    // if handler is some other value, use as result\n    res.result = handler;\n    return end();\n  };\n}\n\nexport function createIdRemapMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, _end) => {\n    const originalId = req.id;\n    const newId = Math.random().toString(36).slice(2);\n    req.id = newId;\n    res.id = newId;\n    next((done) => {\n      req.id = originalId;\n      res.id = originalId;\n      done();\n    });\n  };\n}\n\nexport function createLoggerMiddleware(logger: ConsoleLike): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, _) => {\n    logger.debug(\"REQ\", req, \"RES\", res);\n    next();\n  };\n}\n\nexport function createAsyncMiddleware<T, U>(asyncMiddleware: AsyncJRPCMiddleware<T, U>): JRPCMiddleware<T, U> {\n  return async (req, res, next, end) => {\n    // nextPromise is the key to the implementation\n    // it is resolved by the return handler passed to the\n    // \"next\" function\n    let resolveNextPromise: () => void;\n    const nextPromise = new Promise<void>((resolve) => {\n      resolveNextPromise = resolve;\n    });\n\n    let returnHandlerCallback: unknown = null;\n    let nextWasCalled = false;\n\n    // This will be called by the consumer's async middleware.\n    const asyncNext = async () => {\n      nextWasCalled = true;\n\n      // We pass a return handler to next(). When it is called by the engine,\n      // the consumer's async middleware will resume executing.\n\n      next((runReturnHandlersCallback) => {\n        // This callback comes from JRPCEngine._runReturnHandlers\n        returnHandlerCallback = runReturnHandlersCallback;\n        resolveNextPromise();\n      });\n      await nextPromise;\n    };\n\n    try {\n      await asyncMiddleware(req, res, asyncNext);\n\n      if (nextWasCalled) {\n        await nextPromise; // we must wait until the return handler is called\n        (returnHandlerCallback as ReturnHandlerCallback)(null);\n      } else {\n        end(null);\n      }\n    } catch (err: unknown) {\n      const error = err as Error;\n      if (returnHandlerCallback) {\n        (returnHandlerCallback as ReturnHandlerCallback)(error);\n      } else {\n        end(error);\n      }\n    }\n  };\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@metamask/rpc-errors\");","import { rpcErrors, serializeError } from \"@metamask/rpc-errors\";\nimport { Duplex } from \"readable-stream\";\n\nimport {\n  JRPCEngineEndCallback,\n  JRPCEngineNextCallback,\n  JRPCEngineReturnHandler,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  Maybe,\n  RequestArguments,\n  SendCallBack,\n} from \"./interfaces\";\nimport SafeEventEmitter from \"./safeEventEmitter\";\nimport SerializableError from \"./serializableError\";\n\n/**\n * A JSON-RPC request and response processor.\n * Give it a stack of middleware, pass it requests, and get back responses.\n */\nexport class JRPCEngine extends SafeEventEmitter {\n  private _middleware: JRPCMiddleware<unknown, unknown>[];\n\n  constructor() {\n    super();\n    this._middleware = [];\n  }\n\n  /**\n   * Serially executes the given stack of middleware.\n   *\n   * @returns An array of any error encountered during middleware execution,\n   * a boolean indicating whether the request was completed, and an array of\n   * middleware-defined return handlers.\n   */\n  private static async _runAllMiddleware(\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<unknown>,\n    middlewareStack: JRPCMiddleware<unknown, unknown>[]\n  ): Promise<\n    [\n      unknown, // error\n      boolean, // isComplete\n      JRPCEngineReturnHandler[],\n    ]\n  > {\n    const returnHandlers: JRPCEngineReturnHandler[] = [];\n    let error = null;\n    let isComplete = false;\n\n    // Go down stack of middleware, call and collect optional returnHandlers\n    for (const middleware of middlewareStack) {\n      [error, isComplete] = await JRPCEngine._runMiddleware(req, res, middleware, returnHandlers);\n      if (isComplete) {\n        break;\n      }\n    }\n    return [error, isComplete, returnHandlers.reverse()];\n  }\n\n  /**\n   * Runs an individual middleware.\n   *\n   * @returns An array of any error encountered during middleware execution,\n   * and a boolean indicating whether the request should end.\n   */\n  private static _runMiddleware(\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<unknown>,\n    middleware: JRPCMiddleware<unknown, unknown>,\n    returnHandlers: JRPCEngineReturnHandler[]\n  ): Promise<[unknown, boolean]> {\n    return new Promise((resolve) => {\n      const end: JRPCEngineEndCallback = (err?: unknown) => {\n        const error = err || res.error;\n        if (error) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          if ((globalThis as any).ReactNative) error.stack = \"ReactNative flag is set. Stack trace is not available.\";\n\n          res.error = serializeError(error, {\n            shouldIncludeStack: true,\n            fallbackError: {\n              message: error?.message || error?.toString(),\n              code: error?.code || -32603,\n              stack: error?.stack,\n              data: error?.data || error?.message || error?.toString(),\n            },\n          });\n        }\n        // True indicates that the request should end\n        resolve([error, true]);\n      };\n\n      const next: JRPCEngineNextCallback = (returnHandler?: JRPCEngineReturnHandler) => {\n        if (res.error) {\n          end(res.error);\n        } else {\n          if (returnHandler) {\n            if (typeof returnHandler !== \"function\") {\n              end(new SerializableError({ code: -32603, message: \"JRPCEngine: 'next' return handlers must be functions\" }));\n            }\n            returnHandlers.push(returnHandler);\n          }\n\n          // False indicates that the request should not end\n          resolve([null, false]);\n        }\n      };\n\n      try {\n        middleware(req, res, next, end);\n      } catch (error: unknown) {\n        end(error as Error);\n      }\n    });\n  }\n\n  /**\n   * Serially executes array of return handlers. The request and response are\n   * assumed to be in their scope.\n   */\n  private static async _runReturnHandlers(handlers: JRPCEngineReturnHandler[]): Promise<void> {\n    for (const handler of handlers) {\n      await new Promise<void>((resolve, reject) => {\n        handler((err) => (err ? reject(err) : resolve()));\n      });\n    }\n  }\n\n  /**\n   * Throws an error if the response has neither a result nor an error, or if\n   * the \"isComplete\" flag is falsy.\n   */\n  private static _checkForCompletion(_req: JRPCRequest<unknown>, res: JRPCResponse<unknown>, isComplete: boolean): void {\n    if (!(\"result\" in res) && !(\"error\" in res)) {\n      throw new SerializableError({ code: -32603, message: \"Response has no error or result for request\" });\n    }\n    if (!isComplete) {\n      throw new SerializableError({ code: -32603, message: \"Nothing ended request\" });\n    }\n  }\n\n  /**\n   * Add a middleware function to the engine's middleware stack.\n   *\n   * @param middleware - The middleware function to add.\n   */\n  push<T, U>(middleware: JRPCMiddleware<T, U>): void {\n    this._middleware.push(middleware as JRPCMiddleware<unknown, unknown>);\n  }\n\n  /**\n   * Handle a JSON-RPC request, and return a response.\n   *\n   * @param request - The request to handle.\n   * @param callback - An error-first callback that will receive the response.\n   */\n  handle<T, U>(request: JRPCRequest<T>, callback: (error: unknown, response: JRPCResponse<U>) => void): void;\n\n  /**\n   * Handle an array of JSON-RPC requests, and return an array of responses.\n   *\n   * @param request - The requests to handle.\n   * @param callback - An error-first callback that will receive the array of\n   * responses.\n   */\n  handle<T, U>(requests: JRPCRequest<T>[], callback: (error: unknown, responses: JRPCResponse<U>[]) => void): void;\n\n  /**\n   * Handle a JSON-RPC request, and return a response.\n   *\n   * @param request - The request to handle.\n   * @returns A promise that resolves with the response, or rejects with an\n   * error.\n   */\n  handle<T, U>(request: JRPCRequest<T>): Promise<JRPCResponse<U>>;\n\n  /**\n   * Handle an array of JSON-RPC requests, and return an array of responses.\n   *\n   * @param request - The requests to handle.\n   * @returns A promise that resolves with the array of responses, or rejects\n   * with an error.\n   */\n  handle<T, U>(requests: JRPCRequest<T>[]): Promise<JRPCResponse<U>[]>;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handle(req: unknown, cb?: any) {\n    if (cb && typeof cb !== \"function\") {\n      throw new Error('\"callback\" must be a function if provided.');\n    }\n\n    if (Array.isArray(req)) {\n      if (cb) {\n        return this._handleBatch(req, cb);\n      }\n      return this._handleBatch(req);\n    }\n\n    if (cb) {\n      return this._handle(req as JRPCRequest<unknown>, cb);\n    }\n    return this._promiseHandle(req as JRPCRequest<unknown>);\n  }\n\n  /**\n   * Returns this engine as a middleware function that can be pushed to other\n   * engines.\n   *\n   * @returns This engine as a middleware function.\n   */\n  asMiddleware(): JRPCMiddleware<unknown, unknown> {\n    return async (req, res, next, end) => {\n      try {\n        const [middlewareError, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n        if (isComplete) {\n          await JRPCEngine._runReturnHandlers(returnHandlers);\n          return end(middlewareError as Error);\n        }\n\n        return next(async (handlerCallback) => {\n          try {\n            await JRPCEngine._runReturnHandlers(returnHandlers);\n          } catch (error: unknown) {\n            return handlerCallback(error as Error);\n          }\n          return handlerCallback();\n        });\n      } catch (error: unknown) {\n        return end(error as Error);\n      }\n    };\n  }\n\n  /**\n   * Like _handle, but for batch requests.\n   */\n  private _handleBatch(reqs: JRPCRequest<unknown>[]): Promise<JRPCResponse<unknown>[]>;\n\n  /**\n   * Like _handle, but for batch requests.\n   */\n  private _handleBatch(reqs: JRPCRequest<unknown>[], cb: (error: unknown, responses?: JRPCResponse<unknown>[]) => void): Promise<void>;\n\n  private async _handleBatch(\n    reqs: JRPCRequest<unknown>[],\n    cb?: (error: unknown, responses?: JRPCResponse<unknown>[]) => void\n  ): Promise<JRPCResponse<unknown>[] | void> {\n    // The order here is important\n    try {\n      // 2. Wait for all requests to finish, or throw on some kind of fatal\n      // error\n      const responses = await Promise.all(\n        // 1. Begin executing each request in the order received\n        reqs.map(this._promiseHandle.bind(this))\n      );\n\n      // 3. Return batch response\n      if (cb) {\n        return cb(null, responses);\n      }\n      return responses;\n    } catch (error) {\n      if (cb) {\n        return cb(error);\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * A promise-wrapped _handle.\n   */\n  private _promiseHandle(req: JRPCRequest<unknown>): Promise<JRPCResponse<unknown>> {\n    return new Promise((resolve, reject) => {\n      this._handle(req, (_err, res) => {\n        // There will always be a response, and it will always have any error\n        // that is caught and propagated.\n        if (_err && res === undefined) {\n          reject(_err);\n        } else resolve(res);\n      }).catch(reject);\n    });\n  }\n\n  /**\n   * Ensures that the request object is valid, processes it, and passes any\n   * error and the response object to the given callback.\n   *\n   * Does not reject.\n   */\n  private async _handle(callerReq: JRPCRequest<unknown>, cb: (error: unknown, response: JRPCResponse<unknown>) => void): Promise<void> {\n    if (!callerReq || Array.isArray(callerReq) || typeof callerReq !== \"object\") {\n      const error = new SerializableError({ code: -32603, message: \"request must be plain object\" });\n      return cb(error, { id: undefined, jsonrpc: \"2.0\", error });\n    }\n\n    if (typeof callerReq.method !== \"string\") {\n      const error = new SerializableError({ code: -32603, message: \"method must be string\" });\n      return cb(error, { id: callerReq.id, jsonrpc: \"2.0\", error });\n    }\n\n    const req: JRPCRequest<unknown> = { ...callerReq };\n    const res: JRPCResponse<unknown> = {\n      id: req.id,\n      jsonrpc: req.jsonrpc,\n    };\n    let error: Error = null;\n\n    try {\n      await this._processRequest(req, res);\n    } catch (_error: unknown) {\n      // A request handler error, a re-thrown middleware error, or something\n      // unexpected.\n      error = _error as Error;\n    }\n\n    if (error) {\n      // Ensure no result is present on an errored response\n      delete res.result;\n      if (!res.error) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if ((globalThis as any).ReactNative) error.stack = \"ReactNative flag is set. Stack trace is not available.\";\n\n        res.error = serializeError(error, {\n          shouldIncludeStack: true,\n          fallbackError: {\n            message: error?.message || error?.toString(),\n            code: (error as { code?: number })?.code || -32603,\n            stack: error?.stack,\n            data: (error as { data?: string })?.data || error?.message || error?.toString(),\n          },\n        });\n      }\n    }\n\n    return cb(error, res as JRPCResponse<unknown>);\n  }\n\n  /**\n   * For the given request and response, runs all middleware and their return\n   * handlers, if any, and ensures that internal request processing semantics\n   * are satisfied.\n   */\n  private async _processRequest(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const [error, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n    // Throw if \"end\" was not called, or if the response has neither a result\n    // nor an error.\n    JRPCEngine._checkForCompletion(req, res, isComplete);\n\n    // The return handlers should run even if an error was encountered during\n    // middleware processing.\n    await JRPCEngine._runReturnHandlers(returnHandlers);\n\n    // Now we re-throw the middleware processing error, if any, to catch it\n    // further up the call chain.\n    if (error) {\n      throw error;\n    }\n  }\n}\n\nexport function mergeMiddleware(middlewareStack: JRPCMiddleware<unknown, unknown>[]): JRPCMiddleware<unknown, unknown> {\n  const engine = new JRPCEngine();\n  middlewareStack.forEach((middleware) => engine.push(middleware));\n  return engine.asMiddleware();\n}\n\nexport interface EngineStreamOptions {\n  engine: JRPCEngine;\n}\n\nexport function createEngineStream(opts: EngineStreamOptions): Duplex {\n  if (!opts || !opts.engine) {\n    throw new Error(\"Missing engine parameter!\");\n  }\n\n  const { engine } = opts;\n  // eslint-disable-next-line prefer-const\n  let stream: Duplex;\n\n  function read(): undefined {\n    return undefined;\n  }\n\n  function write(req: JRPCRequest<unknown>, _encoding: unknown, cb: (error?: Error | null) => void) {\n    engine.handle(req, (_err, res) => {\n      stream.push(res);\n    });\n    cb();\n  }\n\n  stream = new Duplex({ objectMode: true, read, write });\n\n  // forward notifications\n  if (engine.on) {\n    engine.on(\"notification\", (message) => {\n      stream.push(message);\n    });\n  }\n  return stream;\n}\n\nexport interface SafeEventEmitterProvider extends SafeEventEmitter {\n  sendAsync: <T, U>(req: JRPCRequest<T>) => Promise<U>;\n  send: <T, U>(req: JRPCRequest<T>, callback: SendCallBack<JRPCResponse<U>>) => void;\n  request: <T, U>(args: RequestArguments<T>) => Promise<Maybe<U>>;\n}\n\nexport function providerFromEngine(engine: JRPCEngine): SafeEventEmitterProvider {\n  const provider: SafeEventEmitterProvider = new SafeEventEmitter() as SafeEventEmitterProvider;\n  // handle both rpc send methods\n  provider.sendAsync = async <T, U>(req: JRPCRequest<T>) => {\n    const res = await engine.handle(req);\n    if (res.error) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      if ((globalThis as any).ReactNative) res.error.stack = \"ReactNative flag is set. Stack trace is not available.\";\n\n      const err = serializeError(res.error, {\n        fallbackError: {\n          message: res.error?.message || res.error?.toString(),\n          code: res.error?.code || -32603,\n          stack: res.error?.stack,\n          data: res.error?.data || res.error?.message || res.error?.toString(),\n        },\n        shouldIncludeStack: true,\n      });\n\n      throw rpcErrors.internal(err);\n    }\n    return res.result as U;\n  };\n\n  provider.send = <T, U>(req: JRPCRequest<T>, callback: (error: unknown, providerRes: JRPCResponse<U>) => void) => {\n    if (typeof callback !== \"function\") {\n      throw new Error('Must provide callback to \"send\" method.');\n    }\n    engine.handle(req, callback);\n  };\n  // forward notifications\n  if (engine.on) {\n    engine.on(\"notification\", (message: string) => {\n      provider.emit(\"data\", null, message);\n    });\n  }\n\n  provider.request = async <T, U>(args: RequestArguments<T>) => {\n    const req: JRPCRequest<T> = {\n      ...args,\n      id: Math.random().toString(36).slice(2),\n      jsonrpc: \"2.0\",\n    };\n    const res = await provider.sendAsync(req);\n    return res as U;\n  };\n  return provider;\n}\n\nexport function providerFromMiddleware(middleware: JRPCMiddleware<string[], unknown>): SafeEventEmitterProvider {\n  const engine = new JRPCEngine();\n  engine.push(middleware);\n  const provider: SafeEventEmitterProvider = providerFromEngine(engine);\n  return provider;\n}\n\nexport function providerAsMiddleware(provider: SafeEventEmitterProvider): JRPCMiddleware<unknown, unknown> {\n  return async (req, res, _next, end) => {\n    // send request to provider\n    try {\n      const providerRes: unknown = await provider.sendAsync<unknown, unknown>(req);\n      res.result = providerRes;\n      return end();\n    } catch (error: unknown) {\n      return end(error as Error);\n    }\n  };\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"end-of-stream\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"once\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"pump\");","import eos from \"end-of-stream\";\nimport once from \"once\";\nimport pump from \"pump\";\nimport { Duplex } from \"readable-stream\";\nimport type { Readable, Writable } from \"stream\";\n\nimport { BufferEncoding } from \"./interfaces\";\nimport Substream from \"./substream\";\n\nexport const IGNORE_SUBSTREAM = Symbol(\"IGNORE_SUBSTREAM\");\n\nexport type Stream = Readable | Writable;\n\ninterface Chunk {\n  name: string;\n  data: unknown;\n}\n\nexport class ObjectMultiplex extends Duplex {\n  public _substreams: Record<string, Substream | typeof IGNORE_SUBSTREAM>;\n\n  getStream: (name: string) => Substream | symbol;\n\n  constructor(opts: Record<string, unknown> = {}) {\n    super({\n      ...opts,\n      objectMode: true,\n    });\n    this._substreams = {};\n  }\n\n  createStream(name: string): Substream {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n\n    if (this._substreams[name]) {\n      throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n    }\n\n    // create substream\n    const substream = new Substream({ parent: this, name });\n    this._substreams[name] = substream;\n\n    // listen for parent stream to end\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    anyStreamEnd(this, (_error?: Error | null) => substream.destroy(_error || undefined));\n\n    return substream;\n  }\n\n  // ignore streams (dont display orphaned data warning)\n  ignoreStream(name: string): void {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n    if (this._substreams[name]) {\n      throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n    }\n    // set\n    this._substreams[name] = IGNORE_SUBSTREAM;\n  }\n\n  _read(): void {\n    return undefined;\n  }\n\n  _write(chunk: Chunk, _encoding: BufferEncoding, callback: (error?: Error | null) => void): void {\n    const { name, data } = chunk;\n\n    if (!name) {\n      window.console.warn(`ObjectMultiplex - malformed chunk without name \"${chunk}\"`);\n      return callback();\n    }\n\n    // get corresponding substream\n    const substream = this._substreams[name];\n    if (!substream) {\n      window.console.warn(`ObjectMultiplex - orphaned data for stream \"${name}\"`);\n      return callback();\n    }\n\n    // push data into substream\n    if (substream !== IGNORE_SUBSTREAM) {\n      substream.push(data);\n    }\n\n    return callback();\n  }\n}\n\n// util\nfunction anyStreamEnd(stream: ObjectMultiplex, _cb: (error?: Error | null) => void) {\n  const cb = once(_cb);\n  eos(stream as unknown as Stream, { readable: false }, cb);\n  eos(stream as unknown as Stream, { writable: false }, cb);\n}\n\nexport function setupMultiplex(stream: Duplex): ObjectMultiplex {\n  const mux = new ObjectMultiplex();\n  mux.getStream = function streamHelper(name: string) {\n    if (this._substreams[name]) {\n      return this._substreams[name];\n    }\n    return this.createStream(name);\n  };\n\n  pump(stream as unknown as Stream, mux as unknown as Stream, stream as unknown as Stream, (err) => {\n    if (err) window.console.error(err);\n  });\n  return mux;\n}\n","import BasePostMessageStream from \"./basePostMessageStream\";\n\nexport default class PostMessageStream extends BasePostMessageStream {\n  _postMessage(data: unknown): void {\n    let originConstraint = this._targetOrigin;\n    if (typeof data === \"object\") {\n      const dataObj = data as Record<string, unknown>;\n      if (typeof dataObj.data === \"object\") {\n        const dataObjData = dataObj.data as Record<string, unknown>;\n        if (Array.isArray(dataObjData.params) && dataObjData.params.length > 0) {\n          const dataObjDataParam = dataObjData.params[0] as Record<string, unknown>;\n          if (dataObjDataParam._origin) {\n            originConstraint = dataObjDataParam._origin as string;\n          }\n\n          // add a constraint for the response\n          dataObjDataParam._origin = window.location.origin;\n        }\n      }\n    }\n\n    this._targetWindow.postMessage(\n      {\n        target: this._target,\n        data,\n      },\n      originConstraint\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"events\");","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { EventEmitter } from \"events\";\n\ntype Handler = (...args: any[]) => void;\ninterface EventMap {\n  [k: string]: Handler | Handler[] | undefined;\n}\n\nfunction safeApply<T, A extends any[]>(handler: (this: T, ...handlerArgs: A) => void, context: T, args: A): void {\n  try {\n    Reflect.apply(handler, context, args);\n  } catch (err) {\n    // Throw error after timeout so as not to interrupt the stack\n    setTimeout(() => {\n      throw err;\n    });\n  }\n}\n\nfunction arrayClone<T>(arr: T[]): T[] {\n  const n = arr.length;\n  const copy = new Array(n);\n  for (let i = 0; i < n; i += 1) {\n    copy[i] = arr[i];\n  }\n  return copy;\n}\n\nexport default class SafeEventEmitter extends EventEmitter {\n  emit(type: string, ...args: any[]): boolean {\n    let doError = type === \"error\";\n\n    const events: EventMap = (this as any)._events;\n    if (events !== undefined) {\n      doError = doError && events.error === undefined;\n    } else if (!doError) {\n      return false;\n    }\n\n    // If there is no 'error' event listener then throw.\n    if (doError) {\n      let er;\n      if (args.length > 0) {\n        [er] = args;\n      }\n      if (er instanceof Error) {\n        // Note: The comments on the `throw` lines are intentional, they show\n        // up in Node's output if this results in an unhandled exception.\n        throw er; // Unhandled 'error' event\n      }\n      // At least give some kind of context to the user\n      const err = new Error(`Unhandled error.${er ? ` (${er.message})` : \"\"}`);\n      (err as any).context = er;\n      throw err; // Unhandled 'error' event\n    }\n\n    const handler = events[type];\n\n    if (handler === undefined) {\n      return false;\n    }\n\n    if (typeof handler === \"function\") {\n      safeApply(handler, this, args);\n    } else {\n      const len = handler.length;\n      const listeners = arrayClone(handler);\n      for (let i = 0; i < len; i += 1) {\n        safeApply(listeners[i], this, args);\n      }\n    }\n\n    return true;\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fast-safe-stringify\");","import stringify from \"fast-safe-stringify\";\n\nexport default class SerializableError<T> extends Error {\n  public code: number;\n\n  public data: T;\n\n  constructor({ code, message, data }: { code: number; message: string; data?: T }) {\n    if (!Number.isInteger(code)) {\n      throw new Error(\"code must be an integer\");\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error(\"message must be string\");\n    }\n\n    super(message);\n    this.code = code;\n    if (data !== undefined) {\n      this.data = data;\n    }\n  }\n\n  toString(): string {\n    return stringify({\n      code: this.code,\n      message: this.message,\n      data: this.data,\n      stack: this.stack,\n    });\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Duplex } from \"readable-stream\";\n\nimport { BufferEncoding } from \"./interfaces\";\n\nexport default class Substream extends Duplex {\n  private readonly _parent: any;\n\n  private readonly _name: string;\n\n  constructor({ parent, name }: { parent: any; name: string }) {\n    super({ objectMode: true });\n    this._parent = parent;\n    this._name = name;\n  }\n\n  /**\n   * Explicitly sets read operations to a no-op.\n   */\n  _read(): void {\n    return undefined;\n  }\n\n  /**\n   * Called when data should be written to this writable stream.\n   *\n   * @param chunk - Arbitrary object to write\n   * @param encoding - Encoding to use when writing payload\n   * @param callback - Called when writing is complete or an error occurs\n   */\n  _write(chunk: unknown, _encoding: BufferEncoding, callback: (error?: Error | null) => void): void {\n    this._parent.push({\n      name: this._name,\n      data: chunk,\n    });\n    callback();\n  }\n}\n","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/objectSpread2\");","module.exports = require(\"readable-stream\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export { default as BasePostMessageStream } from \"./basePostMessageStream\";\nexport * from \"./interfaces\";\nexport * from \"./jrpc\";\nexport * from \"./jrpcEngine\";\nexport * from \"./mux\";\nexport { default as PostMessageStream } from \"./postMessageStream\";\nexport { default as SafeEventEmitter } from \"./safeEventEmitter\";\nexport { default as SerializableError } from \"./serializableError\";\nexport { default as Substream } from \"./substream\";\n"],"names":["Duplex","noop","undefined","SYN","ACK","BRK","BasePostMessageStream","constructor","_ref","name","target","targetWindow","window","targetOrigin","objectMode","_defineProperty","Error","_init","_haveSyn","_name","_target","_targetWindow","_targetOrigin","_onMessage","onMessage","bind","_synIntervalId","addEventListener","_handShake","_break","cork","_write","_onData","data","uncork","push","err","emit","_postMessage","originConstraint","postMessage","event","message","origin","source","_read","_","cb","_destroy","removeEventListener","SafeEventEmitter","SerializableError","getRpcPromiseCallback","resolve","reject","unwrapResult","arguments","length","error","response","Array","isArray","result","createErrorMiddleware","log","req","res","next","end","method","code","done","createStreamMiddleware","idMap","readNoop","events","processResponse","context","id","Object","assign","setTimeout","processNotification","processMessage","_encoding","isNotification","_err","stream","read","write","middleware","createScaffoldMiddleware","handlers","handler","createIdRemapMiddleware","_end","originalId","newId","Math","random","toString","slice","createLoggerMiddleware","logger","debug","createAsyncMiddleware","asyncMiddleware","resolveNextPromise","nextPromise","Promise","returnHandlerCallback","nextWasCalled","asyncNext","runReturnHandlersCallback","rpcErrors","serializeError","JRPCEngine","_middleware","_runAllMiddleware","middlewareStack","returnHandlers","isComplete","_runMiddleware","reverse","globalThis","ReactNative","stack","shouldIncludeStack","fallbackError","returnHandler","_runReturnHandlers","_checkForCompletion","_req","handle","_handleBatch","_handle","_promiseHandle","asMiddleware","middlewareError","handlerCallback","reqs","responses","all","map","catch","callerReq","jsonrpc","_objectSpread","_processRequest","_error","_error2","_error3","_error4","_error5","_error6","_error7","_error8","mergeMiddleware","engine","forEach","createEngineStream","opts","on","providerFromEngine","provider","sendAsync","_res$error","_res$error2","_res$error3","_res$error4","_res$error5","_res$error6","_res$error7","internal","send","callback","request","args","providerFromMiddleware","providerAsMiddleware","_next","providerRes","eos","once","pump","Substream","IGNORE_SUBSTREAM","Symbol","ObjectMultiplex","_substreams","createStream","substream","parent","anyStreamEnd","destroy","ignoreStream","chunk","console","warn","_cb","readable","writable","setupMultiplex","mux","getStream","streamHelper","PostMessageStream","dataObj","dataObjData","params","dataObjDataParam","_origin","location","EventEmitter","safeApply","Reflect","apply","arrayClone","arr","n","copy","i","type","doError","_events","_len","_key","er","len","listeners","stringify","Number","isInteger","_parent","default"],"sourceRoot":""}